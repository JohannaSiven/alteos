{"ast":null,"code":"var _jsxFileName = \"/Users/johanna/alteos/alteos-code-challenge/client/src/components/DataTable.js\";\nimport React, { Component } from \"react\";\nexport class DataTable extends Component {\n  render() {\n    let personalData = this.props.data;\n\n    if (!personalData) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      });\n    } else {\n      let query = this.props.query;\n\n      if (query === \"\") {\n        return;\n      } else {\n        personalData = this.props.data.filter(datapoint => {\n          return Object.values(datapoint).includes(query);\n        });\n        return React.createElement(\"table\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Name\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Age\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Eye color\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Gender\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Company\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Email\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Phone\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Address\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, personalData.map(person => {\n          return React.createElement(\"tr\", {\n            key: person._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, person.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, person.age), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, person.eyeColor), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, person.gender), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, person.company), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, person.email), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, person.phone), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, person.address));\n        })));\n      }\n    }\n  }\n\n}\nexport default DataTable;","map":{"version":3,"sources":["/Users/johanna/alteos/alteos-code-challenge/client/src/components/DataTable.js"],"names":["React","Component","DataTable","render","personalData","props","data","query","filter","datapoint","Object","values","includes","map","person","_id","name","age","eyeColor","gender","company","email","phone","address"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AACvCE,EAAAA,MAAM,GAAG;AACP,QAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWC,IAA9B;;AACA,QAAI,CAACF,YAAL,EAAmB;AACjB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AAEP,UAAIG,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;;AACA,UAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB;AACD,OAFD,MAEO;AACLH,QAAAA,YAAY,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBE,MAAhB,CAAuBC,SAAS,IAAI;AACjD,iBAAOC,MAAM,CAACC,MAAP,CAAcF,SAAd,EAAyBG,QAAzB,CAAkCL,KAAlC,CAAP;AACD,SAFc,CAAf;AAGA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,CADF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,YAAY,CAACS,GAAb,CAAiBC,MAAM,IAAI;AAC1B,iBACE;AAAI,YAAA,GAAG,EAAEA,MAAM,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKD,MAAM,CAACE,IAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKF,MAAM,CAACG,GAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKH,MAAM,CAACI,QAAZ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKJ,MAAM,CAACK,MAAZ,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKL,MAAM,CAACM,OAAZ,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKN,MAAM,CAACO,KAAZ,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKP,MAAM,CAACQ,KAAZ,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKR,MAAM,CAACS,OAAZ,CARF,CADF;AAYD,SAbA,CADH,CAbF,CADF;AAgCD;AACF;AACF;;AAhDwC;AAmDzC,eAAerB,SAAf","sourcesContent":["import React, { Component } from \"react\";\n\nexport class DataTable extends Component {\n  render() {\n    let personalData = this.props.data;\n    if (!personalData) {\n      return <div></div>;\n    } else {\n\n    let query = this.props.query;\n    if (query === \"\") {\n      return;\n    } else {\n      personalData = this.props.data.filter(datapoint => {\n        return Object.values(datapoint).includes(query);\n      });\n      return (\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Age</th>\n              <th>Eye color</th>\n              <th>Gender</th>\n              <th>Company</th>\n              <th>Email</th>\n              <th>Phone</th>\n              <th>Address</th>\n            </tr>\n          </thead>\n          <tbody>\n            {personalData.map(person => {\n              return (\n                <tr key={person._id}>\n                  <td>{person.name}</td>\n                  <td>{person.age}</td>\n                  <td>{person.eyeColor}</td>\n                  <td>{person.gender}</td>\n                  <td>{person.company}</td>\n                  <td>{person.email}</td>\n                  <td>{person.phone}</td>\n                  <td>{person.address}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      );\n    }\n  }\n}\n}\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}